/*
 * This file is generated by jOOQ.
 */
package com.github.dnsq.jooq.tables.records;


import com.github.dnsq.jooq.tables.Click;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ClickRecord extends UpdatableRecordImpl<ClickRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>click.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>click.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>click.count</code>.
     */
    public void setCount(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>click.count</code>.
     */
    public Integer getCount() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ClickRecord
     */
    public ClickRecord() {
        super(Click.CLICK);
    }

    /**
     * Create a detached, initialised ClickRecord
     */
    public ClickRecord(Integer id, Integer count) {
        super(Click.CLICK);

        setId(id);
        setCount(count);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ClickRecord
     */
    public ClickRecord(com.github.dnsq.jooq.tables.pojos.Click value) {
        super(Click.CLICK);

        if (value != null) {
            setId(value.getId());
            setCount(value.getCount());
            resetChangedOnNotNull();
        }
    }
}
